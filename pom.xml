<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>com.happy</groupId>
   <artifactId>LandPeople</artifactId>
   <packaging>war</packaging>
   <version>0.0.1-SNAPSHOT</version>
   <name>wisdom Maven Webapp</name>
   <url>http://maven.apache.org</url>

	<!-- 문서에서 많이 사용하거나 혹은 라이러리의 버전을 동일화 시키기 위해서 선언 변수 -->
   <properties>
      <java-version>1.8</java-version>
      <org.springframework-version>4.0.1.RELEASE</org.springframework-version>
		<!-- AOP 관점 지향 프로그램을 위해서 필요한 라이브러리 / 개발자가 중요시해야할것과 등한시 해야할 것을 나눠서 개발 / 
			CC(Core cencern) vs CCC(Cross ) 깃으로는 위밍이라는 기술 사용 -->
      <org.aspectj-version>1.8.3</org.aspectj-version>
		<!-- 로그 처리를 위해서 사용 log4j를 상속받아서 다시 구성함 성능은 훨씬 좋고 예쁨 log4j2 버전임 -->
      <org.slf4j-version>1.6.6</org.slf4j-version>
   </properties>

	<!-- repositorise : maven의 기본 repository에서 jar파일을 검색시 없은 경우 차선으로 찾는 jar 저장 공간 -->
	<!-- Oracle 접속 라이브러리인 OJDBC6 -->
   <repositories>
      <repository>
         <id>oracle</id>
         <name>ORACLE JDBC Repository</name>
         <url>https://code.lds.org/nexus/content/groups/main-repo</url>
      </repository>
   </repositories>

   <dependencies>
		<!-- 테스트를 위한 library -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>3.8.1</version>
         <scope>test</scope>
      </dependency>

		<!-- spring framework을 사용하기 위한 MVC 기본 라이브러리 -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <version>${org.springframework-version}</version><!-- 버전이 같은애들끼리 묶여있어야 
				나중에 문제 없음 -->
         <exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
            <exclusion>
               <groupId>commons-logging</groupId>
               <artifactId>commons-logging</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

		<!-- 로그처리 log4j>slf4j, scope -->
		<!-- Logging : 로그처리를 위해서 만듦, log4j > slf4j 사용가능 / 특징적인것 scope 이 객체가 만들어 
			지는 환경 -->
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${org.slf4j-version}</version>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <version>${org.slf4j-version}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
         <version>${org.slf4j-version}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <version>1.2.15</version>
         <exclusions>
            <exclusion>
               <groupId>javax.mail</groupId>
               <artifactId>mail</artifactId>
            </exclusion>
            <exclusion>
               <groupId>javax.jms</groupId>
               <artifactId>jms</artifactId>
            </exclusion>
            <exclusion>
               <groupId>com.sun.jdmk</groupId>
               <artifactId>jmxtools</artifactId>
            </exclusion>
            <exclusion>
               <groupId>com.sun.jmx</groupId>
               <artifactId>jmxri</artifactId>
            </exclusion>
         </exclusions>
         <scope>runtime</scope>
      </dependency>

		<!-- IoC 제어역전 객체를 끌고와서 사용함 -->
		<!-- @Inject : IoC 제어역전 객체를 끌고와서 사용함 / DI(의존적 주입)을 위함 -->
      <dependency>
         <groupId>javax.inject</groupId>
         <artifactId>javax.inject</artifactId>
         <version>1</version>
      </dependency>

		<!-- Servlet : 서블릿을 작동하기 위한 라이브러리 -->
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
         <version>2.5</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>javax.servlet.jsp</groupId>
         <artifactId>jsp-api</artifactId>
         <version>2.1</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>jstl</artifactId>
         <version>1.2</version>
      </dependency>

		<!-- String을 처리할 때 좀 더 편하게 처리하기 위함 / null을 3항 연산으로 알아서 처리해줌 -->
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
         <version>3.8.1</version>
      </dependency>

		<!-- OJDBC6 -->
      <dependency>
         <groupId>com.oracle</groupId>
         <artifactId>ojdbc6</artifactId>
         <version>11.2.0.3</version>
      </dependency>

		<!-- ORM Mybatis 사용 -->
      <dependency>
         <groupId>org.mybatis</groupId>
         <artifactId>mybatis</artifactId>
         <version>3.4.6</version>
      </dependency>

		<!-- spring에서 Mybatis를 연동하기 위함 -->
      <dependency>
         <groupId>org.mybatis</groupId>
         <artifactId>mybatis-spring</artifactId>
         <version>1.3.2</version>
      </dependency>

        <!-- Spring ORM -->
		<!-- Spring transaction 처리 tx -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-orm</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

		<!-- 접속정보를 담는 객체 DataSource를 처리 -->
      <dependency>
         <groupId>commons-dbcp</groupId>
         <artifactId>commons-dbcp</artifactId>
         <version>1.4</version>
      </dependency>

		<!-- AOP를 사용하기 위한 라이브러리 -->
		<!-- 관점지향 프로그램을 작성하기 위한 라이브러리 CCC(Cross Cutting Concern) 예외, 로그처리, 트랜젝션 -->
      <dependency>
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjrt</artifactId>
         <version>${org.aspectj-version}</version>
      </dependency>
      <dependency>
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjweaver</artifactId>
         <version>${org.aspectj-version}</version>
      </dependency>

		<!-- Ajax 사용시JSON 으로 반환하는 데이터 타입일 때 사용함 -->
      <dependency>
         <groupId>com.googlecode.json-simple</groupId>
         <artifactId>json-simple</artifactId>
         <version>1.1.1</version>
      </dependency>

		<!-- Ajax 사용시 반환타입을 Map을 통해서 사용할때 -->
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-core</artifactId>
         <version>2.9.8</version>
      </dependency>

      <!-- Spring-RestFul -->
      <!-- 비동기 처리 방식 -->
      <dependency>
         <groupId>org.codehaus.jackson</groupId>
         <artifactId>jackson-mapper-asl</artifactId>
         <version>1.9.13</version>
      </dependency>

		<!-- 메일을 전송하기 위한 라이브러리 -->
      <dependency>
         <groupId>javax.mail</groupId>
         <artifactId>javax.mail-api</artifactId>
         <version>1.5.6</version>
      </dependency>

      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context-support</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

      <dependency>
         <groupId>com.sun.mail</groupId>
         <artifactId>javax.mail</artifactId>
         <version>1.6.0</version>
      </dependency>

		<!-- 스프링 시큐리티 라이브러리 -->
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-web</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-config</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

		<!-- xml파싱 -->
      <dependency>
         <groupId>xerces</groupId>
         <artifactId>xercesImpl</artifactId>
         <version>2.9.1</version>
      </dependency>

		<!-- Apache POI -->
      <dependency>
         <groupId>org.apache.poi</groupId>
         <artifactId>poi</artifactId>
         <version>3.17</version>
      </dependency>
      <dependency>
         <groupId>org.apache.poi</groupId>
         <artifactId>poi-ooxml</artifactId>
         <version>3.17</version>
      </dependency>
      
      <!-- Web Socket -->
      <dependency>
         <groupId>javax.websocket</groupId>
         <artifactId>javax.websocket-api</artifactId>
         <version>1.1</version>
         <scope>provided</scope>
      </dependency>
      
      <!-- Spring websocket -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-websocket</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>
		
     <!-- gson-->
		<dependency>
         <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.5</version>
            <scope>compile</scope>
     </dependency>
     
	<!-- naver login-->
    <dependency>
    	<groupId>com.github.scribejava</groupId>
    	<artifactId>scribejava-core</artifactId>
    	<version>2.8.1</version>
    </dependency>
    
	<!-- google login-->
	<dependency>
	    <groupId>org.springframework.social</groupId>
	    <artifactId>spring-social-google</artifactId>
        <version>1.0.0.RELEASE</version>
    </dependency>
	</dependencies>

   <build>
      <finalName>LandPeople</finalName>
      <plugins>
         <plugin>
            <artifactId>maven-eclipse-plugin</artifactId><!-- 스프링 elements들이 붙음. 
					이 플러그인을 안붙여주고 프로젝트 오른쪽마우스로 설정도 가능 -->
            <version>2.9</version>
            <configuration>
               <additionalProjectnatures>
                  <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
               </additionalProjectnatures>
               <additionalBuildcommands>
                  <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
               </additionalBuildcommands>
               <downloadSources>true</downloadSources>
               <downloadJavadocs>true</downloadJavadocs>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.5.1</version>
            <configuration>
               <source>1.8</source>
               <target>1.8</target>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>